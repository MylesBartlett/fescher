[project]
name = "fescher"
version = "0.1.0"
description = "A 'fesch' package for investigating the Escherian problem of `performative prediction` (under fairness constraints)"
authors = [
    { name = "Predictive Analytics Lab (PAL)", email = "info@predictive-analytics-lab.com" },
]
license = "Apache-2.0"
packages = [{ include = "src" }]
dependencies = [
    "tqdm>=4.66.4",
    "scikit-learn>=1.5.1",
    "seaborn>=0.13.2",
    "gymnasium>=0.29.1",
    "polars>=1.2.0",
    "loguru>=0.7.2",
    "ranzen>=2.5.1",
    "hydra-zen>=0.13.0",
]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
repository = "https://github.com/wearepal/fescher"
readme = "README.md"
requires-python = ">= 3.10, <3.12"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.2.2",
    "python-type-stubs @ git+https://github.com/wearepal/python-type-stubs@95a26e5",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/fescher"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.format]
quote-style = "preserve"
exclude = ["conduit/hydra/**"]

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    # "N", # naming
    "NPY", # numpy
    "PIE",
    "PLC", # pylint convention
    "PLE", # pylint error
    # "PLR", # pylint refactor
    "PLW", # pylint warning
    "PTH", # use-pathlib
    "SIM", # simplify
    "UP",  # pyupgrade
    "W",
]
ignore = [
    "E501",    # line length
    "E721",    # `isinstance()` vs `type() == type()`
    "E741",    # ambiguous variable name
    "F541",    # f-string without placeholder
    "NPY002",  # np.random
    "PLW2901", # overwriting loop variable
    "PLC0105", # covariant typevars have to end in "_co"
    "SIM108",  # ternary operator
    "UP038",   # isinstance calls with `X | Y`
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]

[tool.ruff.lint.isort]
known-third-party = [
    "PIL",
    "albumentations",
    "attr",
    "cv2",
    "ethicml",
    "hydra",
    "numpy",
    "omegaconf",
    "pandas",
    "pytest",
    "pytorch_lightning",
    "ranzen",
    "requests",
    "rich",
    "sklearn",
    "torch",
    "torchaudio",
    "torchmetrics",
    "torchvision",
    "tqdm",
]
extra-standard-library = ["typing_extensions"]
no-lines-before = ["future", "standard-library"]
force-sort-within-sections = true
split-on-trailing-comma = false
classes = ["MISSING", "NICO", "PACS", "SSRP", "ISIC"]
case-sensitive = true

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.10"
reportMissingTypeArgument = "none"
reportCallInDefaultInitializer = "warning"
reportPropertyTypeMismatch = "none"
reportUninitializedInstanceVariable = "warning"
reportPrivateUsage = "none"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportMissingTypeStubs = "warning"
# these errors are a bit annoying
reportUnknownMemberType = "none"
reportUnknownVariableType = "none"
reportUnknownParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownLambdaType = "none"
venvPath = "."
venv = ".venv"
