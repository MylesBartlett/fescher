[tool.poetry]
name = "performative prediction"
version = "0.1.0"
description = ""
authors = ["MylesBartlett <m.bartlett@sussex.ac.uk>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
seaborn = "^0.12.2"
# torch = "^2.0.1"
mesa = "<=0.8.7"
scikit-learn = "^1.3.1"
matplotlib = "^3.8.0"
loguru = "^0.7.2"
whynot = { git = "https://github.com/wearepal/whynot", rev = "main" }
autograd = "^1.6.2"
ranzen = "^2.3.0"
dadaptation = "^3.1"

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
ruff = "^0.0.291"

[tool.ruff]
line-length = 100
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
    # "N", # naming
    "PLC", # pylint convention
    "PLE", # pylint error
    # "PLR", # pylint refactor
    "PLW", # pylint warning
    "PTH", # use-pathlib
    # "UP", # pyupgrade
    "W",
]
ignore = [
    "E501",    # line length
    "F541",    # f-string without placeholder
    "PLW2901", # overwriting loop variable
    "PLC0105", # covariant typevars have to end in "_co"
]
target-version = "py38"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
